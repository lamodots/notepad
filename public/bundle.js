/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function() {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst notesSideBar = document.querySelector('.note_sidebar');\n// READ DATA\nlet baseURL = `http://localhost:3000/notes`;\nfunction getNotes() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const res = yield fetch(baseURL);\n            const notes = yield res.json();\n            let noteCard = \"\";\n            notes.forEach((note) => {\n                noteCard += `\r\n            \r\n            <div class=\"note\">\r\n            <a href=\"index.html?note=${note.id}\">\r\n             <h1>${window.innerWidth < 481 ? note.title.slice(0, 20) : note.title.slice(0, 60)}</h1>\r\n             <p>\r\n                 ${note.note.slice(0, 120)}\r\n             </p>\r\n            </a>\r\n             <div class=\"meta_datas\">\r\n                 <div class=\"date\">${note.date}</div>\r\n                 <div class=\"action_button\">\r\n                     <svg  data-id=\"${note.id}\" class=\"editicon\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                         <path d=\"M11.1333 5.72907H6.1333C5.60287 5.72907 5.09416 5.93979 4.71909 6.31486C4.34401 6.68993 4.1333 7.19864 4.1333 7.72907V18.7291C4.1333 19.2595 4.34401 19.7682 4.71909 20.1433C5.09416 20.5184 5.60287 20.7291 6.1333 20.7291H17.1333C17.6637 20.7291 18.1724 20.5184 18.5475 20.1433C18.9226 19.7682 19.1333 19.2595 19.1333 18.7291V13.7291M17.7193 4.31507C17.9038 4.12405 18.1245 3.97169 18.3685 3.86687C18.6125 3.76205 18.8749 3.70688 19.1405 3.70457C19.4061 3.70227 19.6694 3.75287 19.9152 3.85343C20.161 3.95399 20.3843 4.1025 20.5721 4.29028C20.7599 4.47807 20.9084 4.70137 21.0089 4.94717C21.1095 5.19296 21.1601 5.45632 21.1578 5.72188C21.1555 5.98744 21.1003 6.24988 20.9955 6.49388C20.8907 6.73789 20.7383 6.95858 20.5473 7.14307L11.9613 15.7291H9.1333V12.9011L17.7193 4.31507Z\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                    </svg>\r\n                    <svg data-id=\"${note.id}\" class=\"deleteicon\" width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M19.046 7.61244L18.179 19.7544C18.1431 20.259 17.9173 20.7313 17.5471 21.076C17.177 21.4208 16.6899 21.6125 16.184 21.6124H7.90802C7.40216 21.6125 6.91509 21.4208 6.54491 21.076C6.17472 20.7313 5.94894 20.259 5.91302 19.7544L5.04602 7.61244M10.046 11.6124V17.6124M14.046 11.6124V17.6124M15.046 7.61244V4.61244C15.046 4.34723 14.9407 4.09287 14.7531 3.90534C14.5656 3.7178 14.3112 3.61244 14.046 3.61244H10.046C9.7808 3.61244 9.52645 3.7178 9.33891 3.90534C9.15138 4.09287 9.04602 4.34723 9.04602 4.61244V7.61244M4.04602 7.61244H20.046\" stroke=\"black\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                    </svg>\r\n                             \r\n                 </div>\r\n             </div>\r\n         </div>\r\n  \r\n            \r\n            \r\n            `;\n                notesSideBar.innerHTML = noteCard;\n            });\n            // DELETE NOTE\n            const deleteIcons = document.querySelectorAll('.deleteicon');\n            console.log(deleteIcons);\n            deleteIcons.forEach((deleteIcon) => {\n                deleteIcon.addEventListener('click', deleteNote);\n                function deleteNote(event) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        let del = event.currentTarget.dataset.id;\n                        try {\n                            const response = yield fetch(`http://localhost:3000/notes/${del}`, {\n                                method: 'DELETE',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                }\n                            });\n                            if (response.ok) {\n                                alert('Do you want to delete note ? ');\n                                window.location.href = './index.html';\n                            }\n                            else {\n                                console.log('Could not delete Note');\n                            }\n                        }\n                        catch (error) {\n                            console.log('There is error deleteing Note' + error.message);\n                        }\n                    });\n                }\n            });\n            // UPDATE NOTE\n            const editIcons = document.querySelectorAll('.editicon');\n            const editWrapper = document.querySelector('.edit_wrapper');\n            const closeEdit = document.querySelector('.closeedit');\n            closeEdit === null || closeEdit === void 0 ? void 0 : closeEdit.addEventListener('click', (e) => {\n                e.stopPropagation();\n                editWrapper.classList.remove('create');\n            });\n            editIcons.forEach((editicon) => {\n                editicon.addEventListener('click', editNote);\n                function editNote(event) {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        const edit = event.currentTarget.dataset.id;\n                        editWrapper.classList.add('create');\n                        const editForm = document.querySelector('.editform');\n                        const response = yield fetch(`http://localhost:3000/notes/${edit}`);\n                        const editdata = yield response.json();\n                        let noteTitle = document.querySelector('.editnotetitle');\n                        let type = document.querySelector('.edittype');\n                        let notebody = document.querySelector('#editnotebody');\n                        noteTitle.value = editdata.title;\n                        type.value = editdata.category;\n                        notebody.value = editdata.note;\n                        // Save Data\n                        editForm.addEventListener('submit', updateNote);\n                        function updateNote(event) {\n                            return __awaiter(this, void 0, void 0, function* () {\n                                event.preventDefault();\n                                let notes = {\n                                    title: noteTitle.value,\n                                    note: notebody.value,\n                                    category: type.value,\n                                    date: new Date().toDateString(),\n                                    slug: noteTitle.value.replace(/ /g, \"-\")\n                                };\n                                const response = yield fetch(`http://localhost:3000/notes/${edit}`, {\n                                    method: 'PUT',\n                                    body: JSON.stringify(notes),\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    }\n                                });\n                                window.location.href = './index.html';\n                            });\n                        }\n                    });\n                }\n            });\n        }\n        catch (error) {\n            console.log('We have an error: ' + error);\n        }\n    });\n}\nwindow.addEventListener('DOMContentLoaded', () => getNotes());\n// READING THE CNOTE CONTENT\nconst noteContent = document.querySelector('.note_main-content');\nconst getSlug = new URLSearchParams(window.location.search).get('note');\nconsole.log(getSlug);\nif (getSlug !== null) {\n    function getSingleNote() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield fetch(`${baseURL}/${getSlug}`);\n            const singleNote = yield res.json();\n            const { id, title, note, date, category, slug } = singleNote;\n            let fullNote = `\r\n        <div class=\"note_main-content-content\">\r\n            <h2>${title}</h2>\r\n            <h3><span>${category}</span> <span>Date: ${date}</span></h3>\r\n            <p> ${note}</p>\r\n        </div>\r\n        \r\n        `;\n            noteContent.innerHTML = fullNote;\n        });\n    }\n    getSingleNote();\n}\nelse {\n    noteContent.innerHTML = ' No note selected. Please select a note';\n}\n// CREATE NOTE\nwindow.addEventListener('DOMContentLoaded', function () {\n    const navButton = document.querySelector('nav button');\n    const notePad = document.querySelector('.add_wrapper');\n    const close = document.querySelector('.close');\n    close.style.cursor = 'pointer';\n    navButton.addEventListener('click', (e) => {\n        e.stopPropagation();\n        notePad.classList.add('create');\n    });\n    // close notepad\n    close.addEventListener('click', (e) => {\n        e.stopPropagation();\n        notePad.classList.remove('create');\n    });\n    // close note\n    const form = document.querySelector('form');\n    form.addEventListener('submit', createNote);\n    function createNote(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            e.preventDefault();\n            let noteTitle = document.querySelector('.notetitle');\n            let type = document.querySelector('.type');\n            let notebody = document.querySelector('#notebody');\n            let notes = {\n                title: noteTitle.value,\n                note: notebody.value,\n                category: type.value,\n                date: new Date().toDateString(),\n                slug: noteTitle.value.replace(/ /g, \"-\")\n            };\n            try {\n                const response = yield fetch(baseURL, {\n                    method: 'POST',\n                    body: JSON.stringify(notes),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                if (response.ok) {\n                    alert('Note Added successfully!!');\n                    window.location.href = 'index.html';\n                }\n                else {\n                    alert('Note could not be added');\n                }\n            }\n            catch (error) {\n                console.log(error);\n            }\n        });\n    }\n});\n\n\n//# sourceURL=webpack://notepad/./src/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.ts"]();
/******/ 	
/******/ })()
;